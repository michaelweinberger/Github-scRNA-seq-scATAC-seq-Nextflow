/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/



// Profiles
profiles {

    // executor mode profiles
    standard {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
        params {
            docker_enabled    = true
            cellranger_module = "none"
            samtools_module   = "none"
            python_module     = "none"
            r_module          = "none"
        }        
    }

    HPC_docker {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
        process {
            executor = "slurm"
            queue    = "long"
            time     = "3days"
            memory   = "100 GB"
            cpus     = 30
	}
        params {
            docker_enabled    = true
            cellranger_module = "none"
            samtools_module   = "none"
            python_module     = "none"
            r_module          = "none"
        } 
    }

    HPC_no_docker {
        docker.enabled = false
        process {
            executor = "slurm"
            queue    = "short"
            time     = "1days"
            memory   = "100 GB"
            cpus     = 30
        }
        params {
            docker_enabled    = false
            cellranger_module = "cellranger/7.2.0"
            samtools_module   = "samtools/1.17"
            python_module     = "python-cbrg"
            r_module          = "R-cbrg"
        }
    }

    // species mode profiles
    human {
        params {
            species         = "human"
            species_latin   = "homo_sapiens"
            genome          = "GRCh38"
            genome_ucsc     = "hg38"
            ensembl_version = "110"
        }
    }

    mouse {
        params {
            species         = "mouse"
            species_latin   = "mus_musculus"
            genome          = "GRCm39"
            genome_ucsc     = "mm39"
            ensembl_version = "110"
        }
    }

    zebrafish {
        params {
            species         = "zebrafish"
            species_latin   = "danio_rerio"
            genome          = "GRCz11"
            genome_ucsc     = "danRer11"
            ensembl_version = "110"
        }
    }
}

// DAG configuration
dag.enabled   = true
dag.overwrite = true
dag.file      = "flowchart.png"

// Report configuration
report.enabled = true

// Timeline configuration
timeline.enabled = true

// Trace configuration
trace.enabled = true



/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Pipeline parameters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

params {
	// generic options
	project = "Farbehi"
	outdir  = "/ceph/project/tsslab/mweinber/tmp/nextflow/out"



	/*
	For cellranger alignment:
        Supply path to a "<sample_sheet_name>.txt" file containing sample information.
	File should be tab-delimited, contain a header and the first 2 columns are required to be:
	"sample_id" (the sample-specific prefix of the fastq files, 
                    if samples have been re-sequenced, 
                    supply all prefixes as a comma-separated list)
	"fastq_dir" (the directory containing the fastq files specified by "sample_id", 
                    if samples have been re-sequenced and are stored in multiple directories, 
                    supply all directories as a comma-separated list)
	Further metadata columns can be added: e.g. "sample_name", "tissue", "condition" etc.
	*/
	input = "/ceph/project/tsslab/mweinber/tmp/nextflow/Farbehi_et_al_sample_setup_downsampled.txt"

	/*
	ALTERNATIVELY: - Supply path to a cellranger output directory containing "barcodes.tsv.gz", "features.tsv.gz" and "matrix.mtx.gz" 
                       (normally path/to/outs/count/filtered_feature_bc_matrix).
                       - Also supply filepath to a tab-delimited metadata file containing a "barcode" column of cell barcodes, 
                       a "sample_id" column of sample identifiers, and optional metadata columns. 
                       The "sample_id" column will be used during doublet detection.
        This will prompt the pipeline to skip cellranger alignment. 
        NOTE: If both "input" and "cellranger_out_dir"/"metadata" variables are set, "cellranger_out_dir" and "metadata" will be ignored.
	*/
	cellranger_out_dir = ""
	metadata = ""



	// scRNA-seq doublet removal + clustering
	scRNA_analysis = "scanpy" // One of: "scanpy" or "seurat"
	min_genes   = 200
	max_genes   = 2500
	max_perc_mt = 5
	min_cells   = 3
	n_pcs       = 30
	harmony_var = "sample_id" // Name of the metadata column used for data integration
	leiden_res  = 0.4



	// OPTIONAL: scRNA-seq annotation + visualization
	/*
	Supply .csv file containing a "cluster" column with cell cluster numbers 
        and a "cell_type" column with cell type labels,
	optionally include an "order" column with integers 
        indicating the order in which cell types should appear in plot legends.
        NOTE: scRNA-seq annotation and mRNA velocity analysis will only be run
              if "cluster_anno" is set.
	/ceph/project/tsslab/mweinber/tmp/nextflow/cell_type_anno_seurat.csv
        */
	cell_type_anno = ""



	// OPTIONAL: scRNA-seq velocity analysis
 	/*
	If "input" parameter is not set, ie. when starting the pipeline from cellranger output:
        Supply path to a .txt file containing sample information.
	File should be tab-delimited and should contain a header and 2 columns:
	"sample_id" (the sample IDs used in cellranger output)
	"cellranger_count_dir" (the parent directories of "/outs/possorted_genome_bam.bam"
                                cellranger count outputs)
        NOTE: Velocity analysis will be skipped if both "input" and "scRNA_velocity_file" are not set.
	*/
	scRNA_velocity_file = ""
}
